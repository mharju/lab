shadow$provide[6]=function(mc,Nb,Tb,Hb){function m(ea,Q){var ba;for(ba in ea)if((ea=ba.match(Q))&&(!aa||ea[0].length/ba.length>W)){var W=ea[0].length/ba.length;var aa=ba}return aa}function ka(ea){return m(ea,Ca)}function Fa(ea){return m(ea,La)}function u(ea){return"object"==typeof ea?Object.keys(ea).length:0}function B(ea){var Q=[];[",",";","\t","|"].forEach(function(ba){var W=ha.dsvFormat(ba).parse(ea);if(1<=W.length){for(var aa=u(W[0]),H=0;H<W.length;H++)if(u(W[H])!==aa)return;Q.push({delimiter:ba,
arity:Object.keys(W[0]).length})}});return Q.length?Q.sort(function(ba,W){return W.arity-ba.arity})[0].delimiter:null}var ha=Nb(4),na=Nb(5),Ca=/(Lat)(itude)?/gi,La=/(L)(on|ng)(gitude)?/i;Tb.exports={isLon:function(ea){return!!ea.match(La)},isLat:function(ea){return!!ea.match(Ca)},guessLatHeader:ka,guessLonHeader:Fa,csv:ha.csvParse,tsv:ha.tsvParse,dsv:ha,auto:function(ea){var Q=B(ea);if(!Q)return null;ea=ha.dsvFormat(Q).parse(ea);delete ea.columns;return ea},csv2geojson:function(ea,Q,ba){ba||(ba=Q,
Q={});Q.delimiter=Q.delimiter||",";var W=Q.latfield||"",aa=Q.lonfield||"",H=Q.crs||"",R=[],ja={type:"FeatureCollection",features:R};""!==H&&(ja.crs={type:"name",properties:{name:H}});if("auto"===Q.delimiter&&"string"==typeof ea&&(Q.delimiter=B(ea),!Q.delimiter)){ba({type:"Error",message:"Could not autodetect delimiter"});return}ea="string"==typeof ea?ha.dsvFormat(Q.delimiter).parse(ea):ea;if(ea.length){H=[];var N;W||(W=ka(ea[0]));aa||(aa=Fa(ea[0]));if(W&&aa)for(N=0;N<ea.length;N++){if(void 0!==ea[N][aa]&&
void 0!==ea[N][W]){var O=ea[N][aa],Y=ea[N][W],E;(E=na(O,"EW"))&&(O=E);(E=na(Y,"NS"))&&(Y=E);O=parseFloat(O);Y=parseFloat(Y);isNaN(O)||isNaN(Y)?H.push({message:"A row contained an invalid value for latitude or longitude",row:ea[N],index:N}):(Q.includeLatLon||(delete ea[N][aa],delete ea[N][W]),R.push({type:"Feature",properties:ea[N],geometry:{type:"Point",coordinates:[parseFloat(O),parseFloat(Y)]}}))}}else for(N=0;N<ea.length;N++)R.push({type:"Feature",properties:ea[N],geometry:null});ba(H.length?H:
null,ja)}else ba(null,ja)},toLine:function(ea){ea=ea.features;for(var Q={type:"Feature",geometry:{type:"LineString",coordinates:[]}},ba=0;ba<ea.length;ba++)Q.geometry.coordinates.push(ea[ba].geometry.coordinates);Q.properties=ea.reduce(function(W,aa){for(var H in aa.properties)W[H]||(W[H]=[]),W[H].push(aa.properties[H]);return W},{});return{type:"FeatureCollection",features:[Q]}},toPolygon:function(ea){ea=ea.features;for(var Q={type:"Feature",geometry:{type:"Polygon",coordinates:[[]]}},ba=0;ba<ea.length;ba++)Q.geometry.coordinates[0].push(ea[ba].geometry.coordinates);
Q.properties=ea.reduce(function(W,aa){for(var H in aa.properties)W[H]||(W[H]=[]),W[H].push(aa.properties[H]);return W},{});return{type:"FeatureCollection",features:[Q]}}}}
goog.provide("module$node_modules$csv2geojson$index");
goog.global. module$node_modules$csv2geojson$index=shadow.js.require(6, {});
