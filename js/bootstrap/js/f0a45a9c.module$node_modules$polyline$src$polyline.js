shadow$provide[8]=function(mc,Nb,Tb,Hb){function m(u,B){u=Math.round(u*B);u<<=1;0>u&&(u=~u);for(B="";32<=u;)B+=String.fromCharCode((32|u&31)+63),u>>=5;return B+=String.fromCharCode(u+63)}function ka(u){for(var B=[],ha=0;ha<u.length;ha++)B.push(u[ha].slice().reverse());return B}var Fa={decode:function(u,B){for(var ha=0,na=0,Ca=0,La=[],ea,Q,ba,W=Math.pow(10,B||5);ha<u.length;){Q=ea=0;do ba=u.charCodeAt(ha++)-63,Q|=(ba&31)<<ea,ea+=5;while(32<=ba);B=Q&1?~(Q>>1):Q>>1;ea=Q=0;do ba=u.charCodeAt(ha++)-63,
Q|=(ba&31)<<ea,ea+=5;while(32<=ba);ea=Q&1?~(Q>>1):Q>>1;na+=B;Ca+=ea;La.push([na/W,Ca/W])}return La},encode:function(u,B){if(!u.length)return"";B=Math.pow(10,B||5);for(var ha=m(u[0][0],B)+m(u[0][1],B),na=1;na<u.length;na++){var Ca=u[na],La=u[na-1];ha+=m(Ca[0]-La[0],B);ha+=m(Ca[1]-La[1],B)}return ha},fromGeoJSON:function(u,B){u&&"Feature"===u.type&&(u=u.geometry);if(!u||"LineString"!==u.type)throw Error("Input must be a GeoJSON LineString");return Fa.encode(ka(u.coordinates),B)},toGeoJSON:function(u,
B){u=Fa.decode(u,B);return{type:"LineString",coordinates:ka(u)}}};"object"===typeof Tb&&Tb.exports&&(Tb.exports=Fa)}
goog.provide("module$node_modules$polyline$src$polyline");
goog.global. module$node_modules$polyline$src$polyline=shadow.js.require(8, {});
